/* This file is part of the KDE libraries
   Copyright (C) 1996-1998 Martin R. Jones <mjones@kde.org>
   Copyright (C) 2000 David Faure <faure@kde.org>
   Copyright (C) 2003 Alexander Kellett <lypanov@kde.org>

   This library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Library General Public
   License version 2 as published by the Free Software Foundation.

   This library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public License
   along with this library; see the file COPYING.LIB.  If not, write to
   the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.
*/
#include <qfile.h>
#include <kdebug.h>
#include <stdio.h>
#include <klocale.h>
#include <kbookmarkmanager.h>
#include <qtextcodec.h>
#include <qregexp.h>

#include "kebbookmarkexporter.h"

// for compat
void KEBNSBookmarkExporter::write( bool utf8 )
{
    KEBNSBookmarkExporter exporter( m_pManager, m_fileName );
    exporter.write( utf8 );
}

// for compat
void KEBNSBookmarkExporter::writeFolder( QTextStream &/*fstream*/, KBookmarkGroup /*parent*/ )
{
    kdFatal(7043) << "Sorry, BIC compatibility for KEBNSBookmarkExporter does allow for subclassing!, email me (lypanov) if you need this!" << endl;
}

void KEBNSBookmarkExporterImpl::write( bool utf8 )
{
    if ( QFile::exists( m_fileName ) )
    {
        ::rename( QFile::encodeName( m_fileName ), QFile::encodeName( m_fileName + ".beforekde" ) );
    }

    QFile file( m_fileName );

    if ( !file.open( IO_WriteOnly ) )
    {
        kdError(7043) << "Can't write to file " << m_fileName << endl;
        return;
    }

    QTextStream fstream( &file );
    QString charset;
    if ( utf8 ) {
        fstream.setEncoding( QTextStream::UnicodeUTF8 );
        charset = "UTF-8";
    } else {
        fstream.setEncoding( QTextStream::Locale );
        charset = QString::fromLatin1(QTextCodec::codecForLocale()->name()).upper();
    }

    fstream << "<!DOCTYPE NETSCAPE-Bookmark-file-1>" << endl;
    fstream << i18n("<!-- This file was generated by Konqueror -->") << endl;
    fstream << "<META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=" << charset << "\">" << endl;

    QString title = i18n("Bookmarks");
    fstream << "<TITLE>" << title << "</TITLE>" << endl;
    fstream << "<H1>" << title << "</H1>" << endl;

    fstream << "<DL><p>" << endl;

    writeFolder( fstream, m_pManager->root() );

    fstream << "</DL><P>" << endl;
}

// write the contents of a folder (recursive)
//
void KEBNSBookmarkExporterImpl::writeFolder( QTextStream &fstream, KBookmarkGroup parent )
{
    QRegExp amp("&");
    QRegExp lt("<");
    QRegExp gt(">");
    for ( KBookmark bm = parent.first(); !bm.isNull(); bm = parent.next(bm) )
    {
        if ( bm.isSeparator() )
        {
            fstream << "<HR>" << endl;
        } else
        {
            QString text = bm.text();
            text.replace( amp, "&amp;" ).replace( lt, "&lt;" ).replace( gt, "&gt;" );
            if ( bm.isGroup() )
            {
                fstream << "<DT><H3 ";
                if (!bm.toGroup().isOpen())
                    fstream << "FOLDED ";
                fstream << bm.internalElement().attribute("netscapeinfo");
                fstream << ">" << text << "</H3>" << endl;
                fstream << "<DL><P>" << endl;
                writeFolder( fstream, bm.toGroup() );
                fstream << "</DL><P>" << endl;
            }
            else
            {
                fstream << "<DT><A HREF=\"" << bm.url().url() /* netscape seems to use local8bit...*/ << "\"";
                fstream << bm.internalElement().attribute("netscapeinfo");
                fstream << ">" << text << "</A>" << endl;
            }
        }
    }
}
