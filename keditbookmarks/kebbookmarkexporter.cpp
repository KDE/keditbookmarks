/* This file is part of the KDE libraries
   Copyright (C) 1996-1998 Martin R. Jones <mjones@kde.org>
   Copyright (C) 2000 David Faure <faure@kde.org>
   Copyright (C) 2003 Alexander Kellett <lypanov@kde.org>

   This library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Library General Public
   License version 2 as published by the Free Software Foundation.

   This library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public License
   along with this library; see the file COPYING.LIB.  If not, write to
   the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.
*/
#include <qfile.h>
#include <kdebug.h>
#include <stdio.h>
#include <klocale.h>
#include <kbookmarkmanager.h>
#include <qtextcodec.h>
#include <qregexp.h>

#include "kebbookmarkexporter.h"

// for compat
void KEBNSBookmarkExporter::write(bool utf8) {
   KEBNSBookmarkExporterImpl exporter(m_pManager, m_fileName);
   exporter.write(utf8);
}

// for compat
void KEBNSBookmarkExporter::writeFolder(QTextStream &, KBookmarkGroup) {
   kdFatal(7043) << "Sorry, BIC compatibility for KEBNSBookmarkExporter does allow for subclassing!, email me (lypanov) if you need this!" << endl;
}

void KEBNSBookmarkExporterImpl::write(bool utf8) {
   if (QFile::exists(m_fileName)) {
      ::rename(
         QFile::encodeName(m_fileName), 
         QFile::encodeName(m_fileName + ".beforekde"));
   }

   QFile file(m_fileName);

   if (!file.open(IO_WriteOnly)) {
      kdError(7043) << "Can't write to file " << m_fileName << endl;
      return;
   }

   QTextStream fstream(&file);
   fstream.setEncoding(utf8 ? QTextStream::UnicodeUTF8 : QTextStream::Locale);

   QString charset 
      = utf8 ? "UTF-8" : QString::fromLatin1(QTextCodec::codecForLocale()->name()).upper();

   fstream << "<!DOCTYPE NETSCAPE-Bookmark-file-1>" << endl
           << i18n("<!-- This file was generated by Konqueror -->") << endl
           << "<META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=" 
              << charset << "\">" << endl
           << "<TITLE>" << i18n("Bookmarks") << "</TITLE>" << endl
           << "<H1>" << i18n("Bookmarks") << "</H1>" << endl
           << "<DL><p>" << endl
           << folderAsString(m_pManager->root())
           << "</DL><P>" << endl;
}

const QString KEBNSBookmarkExporterImpl::folderAsString(KBookmarkGroup parent) {
   QString str;
   QTextStream fstream(&str, IO_WriteOnly);

   for (KBookmark bk = parent.first(); !bk.isNull(); bk = parent.next(bk)) {
      if (bk.isSeparator()) {
         fstream << "<HR>" << endl;
         continue;
      }

      QString text = bk.text();
      text.replace(QRegExp("&"), "&amp;")
          .replace(QRegExp("<"), "&lt;")
          .replace(QRegExp(">"), "&gt;");

      if (bk.isGroup() ) {
         fstream << "<DT><H3 " 
                    << (!bk.toGroup().isOpen() ? "FOLDED " : "")
                    << bk.internalElement().attribute("netscapeinfo") << ">" 
                 << text << "</H3>" << endl
                 << "<DL><P>" << endl
                 << folderAsString(bk.toGroup())
                 << "</DL><P>" << endl;
         continue;

      } else {
         // note - netscape seems to use local8bit for url...
         fstream << "<DT><A HREF=\"" << bk.url().url() << "\""
                    << bk.internalElement().attribute("netscapeinfo") << ">" 
                 << text << "</A>" << endl;
         continue;
      }
   }

   return str;
}
