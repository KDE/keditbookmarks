/*
 * This file was generated by dbusidl2cpp version 0.5
 * when processing input file org.kde.nsplugins.NsPlugins.xml
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 */

#ifndef NSPLUGINSADAPTOR_H_207001150277425
#define NSPLUGINSADAPTOR_H_207001150277425

#include <QtCore/QObject>
#include <dbus/qdbus.h>
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface org.kde.nsplugins.NsPlugins
 */
class NsPluginsAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.kde.nsplugins.NsPlugins")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.kde.nsplugins.NsPlugins\" >\n"
"    <method name=\"requestURL\" >\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"url\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"target\" />\n"
"    </method>\n"
"    <method name=\"postURL\" >\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"url\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"target\" />\n"
"      <arg direction=\"in\" type=\"ay\" name=\"data\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"mime\" />\n"
"    </method>\n"
"    <method name=\"statusMessage\" >\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"msg\" />\n"
"    </method>\n"
"    <method name=\"evalJavaScript\" >\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"id\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"script\" />\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    NsPluginsAdaptor(QObject *parent);
    virtual ~NsPluginsAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    Q_ASYNC void evalJavaScript(int id, const QString &script);
    Q_ASYNC void postURL(const QString &url, const QString &target, const QByteArray &data, const QString &mime);
    Q_ASYNC void requestURL(const QString &url, const QString &target);
    Q_ASYNC void statusMessage(const QString &msg);
Q_SIGNALS: // SIGNALS
};

#endif
