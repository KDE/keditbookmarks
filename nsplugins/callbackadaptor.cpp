/*
 * This file was generated by dbusidl2cpp version 0.6
 * Command line was: dbusidl2cpp -m -a callbackadaptor -c NsPluginsCallBackAdaptor -i plugin_part.h -l PluginPart -- org.kde.nsplugins.CallBack.xml
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#include "callbackadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class NsPluginsCallBackAdaptor
 */

NsPluginsCallBackAdaptor::NsPluginsCallBackAdaptor(PluginPart *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

NsPluginsCallBackAdaptor::~NsPluginsCallBackAdaptor()
{
    // destructor
}

void NsPluginsCallBackAdaptor::evalJavaScript(int id, const QString &script)
{
    // handle method call org.kde.nsplugins.CallBack.evalJavaScript
    parent()->evalJavaScript(id, script);
}

void NsPluginsCallBackAdaptor::postURL(const QString &url, const QString &target, const QByteArray &data, const QString &mime)
{
    // handle method call org.kde.nsplugins.CallBack.postURL
    parent()->postURL(url, target, data, mime);
}

void NsPluginsCallBackAdaptor::requestURL(const QString &url, const QString &target)
{
    // handle method call org.kde.nsplugins.CallBack.requestURL
    parent()->requestURL(url, target);
}

void NsPluginsCallBackAdaptor::statusMessage(const QString &msg)
{
    // handle method call org.kde.nsplugins.CallBack.statusMessage
    parent()->statusMessage(msg);
}


#include "callbackadaptor.moc"
