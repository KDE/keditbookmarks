/*
 * This file was generated by dbusidl2cpp version 0.6
 * Command line was: dbusidl2cpp -m -a viewer_adaptor -c ViewerAdaptor -i nsplugin.h -l NSPluginViewer -- org.kde.nsplugins.xml
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 * This file HAS have been hand-edited, to rename the classes.
 */

#ifndef VIEWER_ADAPTOR_H_230831151535345
#define VIEWER_ADAPTOR_H_230831151535345

#include <QtCore/QObject>
#include <dbus/qdbus.h>
#include "nsplugin.h"
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface org.kde.nsplugins.Class
 */
class ClassAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.kde.nsplugins.Class")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.kde.nsplugins.Class\" >\n"
"    <method name=\"newInstance\" >\n"
"      <arg direction=\"out\" type=\"o\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"url\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"mimeType\" />\n"
"      <arg direction=\"in\" type=\"b\" name=\"embed\" />\n"
"      <arg direction=\"in\" type=\"as\" name=\"argn\" />\n"
"      <arg direction=\"in\" type=\"as\" name=\"argv\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"appId\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"callbackId\" />\n"
"      <arg direction=\"in\" type=\"b\" name=\"reload\" />\n"
"    </method>\n"
"    <method name=\"getMIMEDescription\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    ClassAdaptor(NSPluginClass *parent);
    virtual ~ClassAdaptor();

    inline NSPluginClass *parent() const
    { return static_cast<NSPluginClass *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    QString getMIMEDescription();
    QDBusObjectPath newInstance(const QString &url, const QString &mimeType, bool embed, const QStringList &argn, const QStringList &argv, const QString &appId, const QString &callbackId, bool reload);
Q_SIGNALS: // SIGNALS
};

/*
 * Adaptor class for interface org.kde.nsplugins.Instance
 */
class InstanceAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.kde.nsplugins.Instance")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.kde.nsplugins.Instance\" >\n"
"    <method name=\"shutdown\" />\n"
"    <method name=\"winId\" >\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"    </method>\n"
"    <method name=\"setWindow\" >\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"remove\" />\n"
"    </method>\n"
"    <method name=\"setWindow\" >\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"    </method>\n"
"    <method name=\"resizePlugin\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"w\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"h\" />\n"
"    </method>\n"
"    <method name=\"javascriptResult\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"id\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"result\" />\n"
"    </method>\n"
"    <method name=\"displayPlugin\" />\n"
"  </interface>\n"
        "")
public:
    InstanceAdaptor(NSPluginInstance *parent);
    virtual ~InstanceAdaptor();

    inline NSPluginInstance *parent() const
    { return static_cast<NSPluginInstance *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void displayPlugin();
    void javascriptResult(int id, const QString &result);
    void resizePlugin(int w, int h);
    int setWindow();
    int setWindow(int remove);
    void shutdown();
    int winId();
Q_SIGNALS: // SIGNALS
};

/*
 * Adaptor class for interface org.kde.nsplugins.Viewer
 */
class ViewerAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.kde.nsplugins.Viewer")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.kde.nsplugins.Viewer\" >\n"
"    <method name=\"shutdown\" />\n"
"    <method name=\"newClass\" >\n"
"      <arg direction=\"out\" type=\"o\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"plugin\" />\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    ViewerAdaptor(NSPluginViewer *parent);
    virtual ~ViewerAdaptor();

    inline NSPluginViewer *parent() const
    { return static_cast<NSPluginViewer *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    QDBusObjectPath newClass(const QString &plugin, const QDBusMessage& msg);
    void shutdown();
Q_SIGNALS: // SIGNALS
};

#endif
